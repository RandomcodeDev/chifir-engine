#include "fastbuild/Config.bff"
#include "fastbuild/Util.bff"

.IncludeDirs = { 'public', 'external', 'external/phnt', 'public/xbox' }

#include "fastbuild/MSVC.bff"
//#include "fastbuild/Clang.bff"
#include "fastbuild/Windows.bff"
//#include "fastbuild/Linux.bff"
#if file_exists("private/fastbuild/Switch.bff")
#include "private/fastbuild/Switch.bff"
#endif

.BuildConfigs =
{
#if __WINDOWS__
#if HAVE_MSVC_AMD64
	.GDK_MSVC_AMD64Debug,
	.GDK_MSVC_AMD64Release,
	.GDK_MSVC_AMD64Retail,
#if HAVE_GDKX
	.GDKX_MSVC_AMD64Debug,
	.GDKX_MSVC_AMD64Release,
	.GDKX_MSVC_AMD64Retail,
#endif
#endif
#if HAVE_MSVC_ARM64
	.Windows_MSVC_ARM64Debug,
	.Windows_MSVC_ARM64Release,
	.Windows_MSVC_ARM64Retail,
#endif
#if HAVE_MSVC_X86
	.Windows_MSVC_x86Debug,
	.Windows_MSVC_x86Release,
	.Windows_MSVC_x86Retail,
#endif
#if HAVE_MSVC_XBOX360
	.Xbox360_MSVC_Debug,
	.Xbox360_MSVC_Release,
	.Xbox360_MSVC_Retail,
#endif

#if HAVE_CLANG
	.GDK_Clang_Windows_AMD64Debug,
	.GDK_Clang_Windows_AMD64Release,
	.GDK_Clang_Windows_AMD64Retail,
	.GDKX_Clang_Windows_AMD64Debug,
	.GDKX_Clang_Windows_AMD64Release,
	.GDKX_Clang_Windows_AMD64Retail,
	.Windows_Clang_Windows_ARM64Debug,
	.Windows_Clang_Windows_ARM64Release,
	.Windows_Clang_Windows_ARM64Retail,
	.Windows_Clang_Windows_x86Debug,
	.Windows_Clang_Windows_x86Release,
	.Windows_Clang_Windows_x86Retail,
#if HAVE_SWITCH
	.Switch_Clang_NX64Debug,
	.Switch_Clang_NX64Release,
	.Switch_Clang_NX64Retail,
#endif
#endif
#endif
}

#if __WINDOWS__
.ProjectCommon =
[
	.ProjectBuildCommand = 'cd ^$(SolutionDir)..\..\ & $_FASTBUILD_EXE_PATH_$ -vs -dist -monitor -cache ^$(ProjectName)-^$(Configuration)'
	.ProjectRebuildCommand = 'cd ^$(SolutionDir)..\..\ & $_FASTBUILD_EXE_PATH_$ -vs -dist -monitor -cache -clean ^$(ProjectName)-^$(Configuration)'
	.OutputDirectory = '^$(SolutionDir)\build'
	.IntermediateDirectory = '^$(SolutionDir)\build'
	.BuildLogFile = '^$(SolutionDir)\Temp\^$(ProjectName)-^$(Configuration).log'
	.PlatformToolset = '$VSToolset$'
]

.Project_MSVC_Windows_x86_Debug = [Using(.ProjectCommon) .Platform = 'Win32' .SolutionPlatform = 'x86' .SolutionConfig = 'Debug-MSVC' .Config = 'MSVC-Windows-x86-Debug']
.Project_MSVC_Windows_x86_Release = [Using(.ProjectCommon) .Platform = 'Win32' .SolutionPlatform = 'x86' .SolutionConfig = 'Release-MSVC' .Config = 'MSVC-Windows-x86-Release']
.Project_MSVC_Windows_x86_Retail = [Using(.ProjectCommon) .Platform = 'Win32' .SolutionPlatform = 'x86' .SolutionConfig = 'Retail-MSVC' .Config = 'MSVC-Windows-x86-Retail']
.Project_MSVC_GDK_AMD64_Debug = [Using(.ProjectCommon) .Platform = 'x64' .SolutionPlatform = 'GDK' .SolutionConfig = 'Debug-MSVC' .Config = 'MSVC-GDK-AMD64-Debug']
.Project_MSVC_GDK_AMD64_Release = [Using(.ProjectCommon) .Platform = 'x64' .SolutionPlatform = 'GDK' .SolutionConfig = 'Release-MSVC' .Config = 'MSVC-GDK-AMD64-Release']
.Project_MSVC_GDK_AMD64_Retail = [Using(.ProjectCommon) .Platform = 'x64' .SolutionPlatform = 'GDK' .SolutionConfig = 'Retail-MSVC' .Config = 'MSVC-GDK-AMD64-Retail']
.Project_MSVC_GDKX_AMD64_Debug = [Using(.ProjectCommon) .Platform = 'x64' .SolutionPlatform = 'GDKX' .SolutionConfig = 'Debug-MSVC' .Config = 'MSVC-GDKX-AMD64-Debug']
.Project_MSVC_GDKX_AMD64_Release = [Using(.ProjectCommon) .Platform = 'x64' .SolutionPlatform = 'GDKX' .SolutionConfig = 'Release-MSVC' .Config = 'MSVC-GDKX-AMD64-Release']
.Project_MSVC_GDKX_AMD64_Retail = [Using(.ProjectCommon) .Platform = 'x64' .SolutionPlatform = 'GDKX' .SolutionConfig = 'Retail-MSVC' .Config = 'MSVC-GDKX-AMD64-Retail']
.Project_MSVC_Xbox360_PPC64_Debug = [Using(.ProjectCommon) .Platform = 'Xbox360' .SolutionPlatform = 'Xbox360' .SolutionConfig = 'Debug-MSVC' .Config = 'MSVC-Xbox360-PPC64-Debug']
.Project_MSVC_Xbox360_PPC64_Release = [Using(.ProjectCommon) .Platform = 'Xbox360' .SolutionPlatform = 'Xbox360' .SolutionConfig = 'Release-MSVC' .Config = 'MSVC-Xbox360-PPC64-Release']
.Project_MSVC_Xbox360_PPC64_Retail = [Using(.ProjectCommon) .Platform = 'Xbox360' .SolutionPlatform = 'Xbox360' .SolutionConfig = 'Retail-MSVC' .Config = 'MSVC-Xbox360-PPC64-Retail']
.Project_MSVC_Windows_ARM64_Debug = [Using(.ProjectCommon) .Platform = 'ARM64' .SolutionPlatform = 'ARM64' .SolutionConfig = 'Debug-MSVC' .Config = 'MSVC-Windows-ARM64-Debug']
.Project_MSVC_Windows_ARM64_Release = [Using(.ProjectCommon) .Platform = 'ARM64' .SolutionPlatform = 'ARM64' .SolutionConfig = 'Release-MSVC' .Config = 'MSVC-Windows-ARM64-Release']
.Project_MSVC_Windows_ARM64_Retail = [Using(.ProjectCommon) .Platform = 'ARM64' .SolutionPlatform = 'ARM64' .SolutionConfig = 'Retail-MSVC' .Config = 'MSVC-Windows-ARM64-Retail']
.Project_Clang_Windows_x86_Debug = [Using(.ProjectCommon) .Platform = 'Win32' .SolutionPlatform = 'x86' .SolutionConfig = 'Debug-Clang' .Config = 'Clang-Windows-x86-Debug']
.Project_Clang_Windows_x86_Release = [Using(.ProjectCommon) .Platform = 'Win32' .SolutionPlatform = 'x86' .SolutionConfig = 'Release-Clang' .Config = 'Clang-Windows-x86-Release']
.Project_Clang_Windows_x86_Retail = [Using(.ProjectCommon) .Platform = 'Win32' .SolutionPlatform = 'x86' .SolutionConfig = 'Retail-Clang' .Config = 'Clang-Windows-x86-Retail']
.Project_Clang_GDK_AMD64_Debug = [Using(.ProjectCommon) .Platform = 'x64' .SolutionPlatform = 'GDK' .SolutionConfig = 'Debug-Clang' .Config = 'Clang-GDK-AMD64-Debug']
.Project_Clang_GDK_AMD64_Release = [Using(.ProjectCommon) .Platform = 'x64' .SolutionPlatform = 'GDK' .SolutionConfig = 'Release-Clang' .Config = 'Clang-GDK-AMD64-Release']
.Project_Clang_GDK_AMD64_Retail = [Using(.ProjectCommon) .Platform = 'x64' .SolutionPlatform = 'GDK' .SolutionConfig = 'Retail-Clang' .Config = 'Clang-GDK-AMD64-Retail']
.Project_Clang_GDKX_AMD64_Debug = [Using(.ProjectCommon) .Platform = 'x64' .SolutionPlatform = 'GDKX' .SolutionConfig = 'Debug-Clang' .Config = 'Clang-GDKX-AMD64-Debug']
.Project_Clang_GDKX_AMD64_Release = [Using(.ProjectCommon) .Platform = 'x64' .SolutionPlatform = 'GDKX' .SolutionConfig = 'Release-Clang' .Config = 'Clang-GDKX-AMD64-Release']
.Project_Clang_GDKX_AMD64_Retail = [Using(.ProjectCommon) .Platform = 'x64' .SolutionPlatform = 'GDKX' .SolutionConfig = 'Retail-Clang' .Config = 'Clang-GDKX-AMD64-Retail']
.Project_Clang_Windows_ARM64_Debug = [Using(.ProjectCommon) .Platform = 'ARM64' .SolutionPlatform = 'ARM64' .SolutionConfig = 'Debug-Clang' .Config = 'Clang-Windows-ARM64-Debug']
.Project_Clang_Windows_ARM64_Release = [Using(.ProjectCommon) .Platform = 'ARM64' .SolutionPlatform = 'ARM64' .SolutionConfig = 'Release-Clang' .Config = 'Clang-Windows-ARM64-Release']
.Project_Clang_Windows_ARM64_Retail = [Using(.ProjectCommon) .Platform = 'ARM64' .SolutionPlatform = 'ARM64' .SolutionConfig = 'Retail-Clang' .Config = 'Clang-Windows-ARM64-Retail']
.Project_Clang_Switch_NX64_Debug = [Using(.ProjectCommon) .Platform = 'NX64' .SolutionPlatform = 'NX64' .SolutionConfig = 'Debug-Clang' .Config = 'Clang-Switch-NX64-Debug']
.Project_Clang_Switch_NX64_Release = [Using(.ProjectCommon) .Platform = 'NX64' .SolutionPlatform = 'NX64' .SolutionConfig = 'Release-Clang' .Config = 'Clang-Switch-NX64-Release']
.Project_Clang_Switch_NX64_Retail = [Using(.ProjectCommon) .Platform = 'NX64' .SolutionPlatform = 'NX64' .SolutionConfig = 'Retail-Clang' .Config = 'Clang-Switch-NX64-Retail']
#endif

.Targets_MSVC_Windows_x86_Debug = {}
.Targets_MSVC_Windows_x86_Release = {}
.Targets_MSVC_Windows_x86_Retail = {}
.Targets_MSVC_GDK_AMD64_Debug = {}
.Targets_MSVC_GDK_AMD64_Release = {}
.Targets_MSVC_GDK_AMD64_Retail = {}
.Targets_MSVC_GDKX_AMD64_Debug = {}
.Targets_MSVC_GDKX_AMD64_Release = {}
.Targets_MSVC_GDKX_AMD64_Retail = {}
.Targets_MSVC_Xbox360_PPC64_Debug = {}
.Targets_MSVC_Xbox360_PPC64_Release = {}
.Targets_MSVC_Xbox360_PPC64_Retail = {}
.Targets_MSVC_Windows_ARM64_Debug = {}
.Targets_MSVC_Windows_ARM64_Release = {}
.Targets_MSVC_Windows_ARM64_Retail = {}
.Targets_Clang_Windows_x86_Debug = {}
.Targets_Clang_Windows_x86_Release = {}
.Targets_Clang_Windows_x86_Retail = {}
.Targets_Clang_GDK_AMD64_Debug = {}
.Targets_Clang_GDK_AMD64_Release = {}
.Targets_Clang_GDK_AMD64_Retail = {}
.Targets_Clang_GDKX_AMD64_Debug = {}
.Targets_Clang_GDKX_AMD64_Release = {}
.Targets_Clang_GDKX_AMD64_Retail = {}
.Targets_Clang_Windows_ARM64_Debug = {}
.Targets_Clang_Windows_ARM64_Release = {}
.Targets_Clang_Windows_ARM64_Retail = {}
.Targets_Clang_Switch_NX64_Debug = {}
.Targets_Clang_Switch_NX64_Release = {}
.Targets_Clang_Switch_NX64_Retail = {}

#include "base/CommonFiles.bff"
#include "base/Base.bff"
#include "launcher/Launcher.bff"
#include "engine/Engine.bff"
#include "videosystem/VideoSystem.bff"

// All for specific target and config
ForEach(.BuildConfig in .BuildConfigs)
{
	Using(.BuildConfig)

	Alias('All-$CompilerName$-$PlatformName$-$ArchName$-$ConfigName$') {.Targets = .'Targets_$CompilerName$_$PlatformName$_$ArchName$_$ConfigName$'}
}

// All configs for target and compiler
.Compilers =
{
#if HAVE_MSVC
	'MSVC',
#endif
#if HAVE_CLANG
	'Clang'
#endif
}

.Configs =
{
	'Debug',
	'Release',
	'Retail'
}

.CompilerPlatforms_MSVC = {
#if HAVE_MSVC_AMD64
	'GDK-AMD64',
#if HAVE_GDKX
	'GDKX-AMD64',
#endif
#endif
#if HAVE_MSVC_X86
	'Windows-x86',
#endif
#if HAVE_MSVC_ARM64
	'Windows-ARM64',
#endif
#if HAVE_MSVC_XBOX360
	'Xbox360-PPC64'
#endif
}
.CompilerPlatforms_Clang = {
#if HAVE_CLANG
	'GDK-AMD64',
#if HAVE_GDKX
	'GDKX-AMD64',
#endif
	'Windows-x86',
	'Windows-ARM64',
#if HAVE_SWITCH
	'Switch-NX64'
#endif
#endif
}

ForEach(.Compiler in .Compilers)
{
	.Targets = {}
	ForEach(.Platform in .'CompilerPlatforms_$Compiler$')
	{
		Alias('All-$Compiler$-$Platform$')
		{
			.Targets = {}
			ForEach(.Config in .Configs)
			{
				^Targets + {'All-$Compiler$-$Platform$-$Config$'}
			}
		}

		^Targets + {'All-$Compiler$-$Platform$'}
	}

	Alias('All-$Compiler$')
	{
		.Targets = .Targets
	}
}

// All for host platform
#if __WINDOWS__
Alias('All')
{
	.Targets = {'All-MSVC', 'All-Clang'}
}
#endif

// VS solution
#if __WINDOWS__
{
	.ExtraOptions = [.ProjectInputPaths = {}]
	.ProjectConfigs = {}
	ForEach(.BuildConfig in .BuildConfigs)
	{
		Using(.BuildConfig)
		.ProjectConfig = [Using(.'Project_$CompilerName$_$PlatformName$_$ArchName$_$ConfigName$')]
		^ProjectConfigs + .ProjectConfig
	}
	CreateVcxProject('All', '/', .ProjectConfigs, .ExtraOptions)
}
{
	.ExtraOptions = [.ProjectAllowedFileExtensions = '*.bff']
	.ProjectConfigs = {}
	ForEach(.BuildConfig in .BuildConfigs)
	{
		Using(.BuildConfig)
		.ProjectConfig = [Using(.'Project_$CompilerName$_$PlatformName$_$ArchName$_$ConfigName$')]
		^ProjectConfigs + .ProjectConfig
	}

	CreateVcxProject('FASTBuild', 'fastbuild/', .ProjectConfigs, .ExtraOptions)
}
{
	.ExtraOptions = [.ProjectAllowedFileExtensions = '*.py;*.bat;*.sh']
	.ProjectConfigs = {}
	ForEach(.BuildConfig in .BuildConfigs)
	{
		Using(.BuildConfig)
		.ProjectConfig = [Using(.'Project_$CompilerName$_$PlatformName$_$ArchName$_$ConfigName$')]
		^ProjectConfigs + .ProjectConfig
	}

	CreateVcxProject('Scripts', 'scripts/', .ProjectConfigs, .ExtraOptions)
}
{
	.ExtraOptions = []
	.ProjectConfigs = {}
	ForEach(.BuildConfig in .BuildConfigs)
	{
		Using(.BuildConfig)
		.ProjectConfig = [Using(.'Project_$CompilerName$_$PlatformName$_$ArchName$_$ConfigName$')]
		^ProjectConfigs + .ProjectConfig
	}

	CreateVcxProject('Public', 'public/', .ProjectConfigs, .ExtraOptions)
}
{
	.ExtraOptions = []
	.ProjectConfigs = {}
	ForEach(.BuildConfig in .BuildConfigs)
	{
		Using(.BuildConfig)
		.ProjectConfig = [Using(.'Project_$CompilerName$_$PlatformName$_$ArchName$_$ConfigName$')]
		^ProjectConfigs + .ProjectConfig
	}

	CreateVcxProject('External', 'external/', .ProjectConfigs, .ExtraOptions)
}
{
	.ExtraOptions = [.ProjectInputPaths = {}]
	.ProjectConfigs = {}
	ForEach(.BuildConfig in .BuildConfigs)
	{
		Using(.BuildConfig)
		.ProjectConfig =
		[
			Using(.'Project_$CompilerName$_$PlatformName$_$ArchName$_$ConfigName$')
			.ProjectBuildCommand = 'cd ^$(SolutionDir)..\..\ & $_FASTBUILD_EXE_PATH_$ solution -vs'
			.ProjectRebuildCommand = 'cd ^$(SolutionDir)..\..\ & $_FASTBUILD_EXE_PATH_$ solution -vs -clean'
		]
		^ProjectConfigs + .ProjectConfig
	}

	CreateVcxProject('UpdateSolution', '/', .ProjectConfigs, .ExtraOptions)
}

VSSolution('solution')
{
	.SolutionOutput = 'projects/VisualStudio/Чифир.sln'
	.SolutionBuildProject = 'All-proj'
	.SolutionConfigs = {}
	ForEach(.BuildConfig in .BuildConfigs)
	{
		Using(.BuildConfig)
		.SolutionConfig = [Using(.'Project_$CompilerName$_$PlatformName$_$ArchName$_$ConfigName$')]
		^SolutionConfigs + .SolutionConfig
	}

	.SolutionVisualStudioVersion = '$VSSolutionVersion$'

	.Deps =
	[
		.Projects = {'Launcher-proj'}
		.Dependencies = {'All-proj'}
	]
	.SolutionDependencies = {.Deps}

	.Folder_Meta =
	[
		.Path = 'Meta'
		.Items = {'fbuild.bff'}
		.Projects = {'All-proj', 'FASTBuild-proj', 'Scripts-proj', 'UpdateSolution-proj'}
	]

	.Folder_Support =
	[
		.Path = 'Support'
		.Projects = {'Base-proj', 'CommonFiles-proj', 'External-proj', 'Public-proj'}
	]

	.Folder_Systems =
	[
		.Path = 'Systems'
		.Projects = {'VideoSystem-proj'}
	]

	.SolutionFolders = {.Folder_Meta, .Folder_Support, .Folder_Systems}
	.SolutionProjects = {'Launcher-proj', 'Engine-proj'}
}
#endif

