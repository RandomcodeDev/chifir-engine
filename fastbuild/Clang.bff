#once

#include "Config.bff"

#if HAVE_CLANG
.Clang_Common = 
[
	.CompilerName = 'Clang'

	.Compiler = '$LLVMDir$/bin/clang++'
	.Linker = '$LLVMDir$/bin/clang++'
	.Librarian = '$LLVMDir$/llvm-ar'

	.CompilerOptions = ' "%1"' // Input
					 + ' -o"%2"' // Output
					 + ' -c' // Compile only
					 + ' -ffreestanding' // Disable libc
					 + ' -fms-extensions' // These are nice to have, especially for COM code
					 + ' -fno-exceptions' // No exceptions
					 + ' -fvisibility=hidden' // So internal/private symbols in dynamic libraries don't conflict
					 + ' -Wall' // Most warnings
					 + ' -Wextra' // More warnings
					 + ' -Werror' // Warnings as errors

	ForEach(.IncludeDir in .IncludeDirs)
	{
		^CompilerOptions + ' -I"$_WORKING_DIR_$/$IncludeDir$'
	}

	.CompilerOptionsC = .CompilerOptions

	.LinkerOptions = ' -o"%2"' // Output
				   + ' "%1"' // Input
				   + ' -nostdlib' // No libc etc
				   + ' -fuse-ld=lld' // Use LLD cause it's better
	
	.LibrarianOptions = ' -o"%2"' // Output
					  + ' "%1"' // Input
					  + ' -nostdlib' // No libc
]

.Clang_Debug =
[
	.ConfigName = 'Debug'

	.CompilerOptions = ' -g' // Debug info
					 + ' -O0' // Disable optimization
					 
					 + ' -DCH_DEBUG'
	
	.LinkerOptions = ' -g' // Debug info
]

.Clang_Release =
[
	.ConfigName = 'Release'
	
	.CompilerOptions = ' -O2' // Optimize a bit
					 + ' -Og' // Improve debugging
					 + ' -ffast-math' // Faster math
					 + ' -flto=thin' // Faster incremental builds

					 + ' -DCH_RELEASE'
]

.Clang_Retail =
[
	Using(.Clang_Release)

	.ConfigName = 'Retail'

	.CompilerOptions + ' -O3' // Even higher optimization
					 - ' -O2'
					 - ' -Og' // No debuggability, logging and other stuff is the only way

					 + ' -DCH_RETAIL'
]

.Clang_AMD64 =
[
	.ArchName = 'AMD64'
	.MASM = '$_CURRENT_BFF_DIR_$/../tools/ml64'

	.CompilerOptions = ' -DCH_X86 -DCH_AMD64 -DCH_SIMD128 -DCH_SIMD256'
]

.Clang_AMD64Debug = .Clang_Common + .Clang_AMD64 + .Clang_Debug
.Clang_AMD64Release = .Clang_Common + .Clang_AMD64 + .Clang_Release
.Clang_AMD64Retail = .Clang_Common + .Clang_AMD64 + .Clang_Retail

.Clang_ARM64 =
[
	.ArchName = 'ARM64'
	.MASM = '$_CURRENT_BFF_DIR_$/../tools/marmasm'

	.CompilerOptions = ' -DCH_ARM64 -DCH_SIMD128 -DCH_SIMD256'
]

.Clang_ARM64Debug = .Clang_Common + .Clang_ARM64 + .Clang_Debug
.Clang_ARM64Release = .Clang_Common + .Clang_ARM64 + .Clang_Release
.Clang_ARM64Retail = .Clang_Common + .Clang_ARM64 + .Clang_Retail

.Clang_x86 =
[
	.CompilerOptions = ' -DCH_X86 -DCH_IA32 -DCH_SIMD128 -DCH_SIMD256'
]

.Clang_x86Debug = .Clang_Common + .Clang_x86 + .Clang_Debug
.Clang_x86Release = .Clang_Common + .Clang_x86 + .Clang_Release
.Clang_x86Retail = .Clang_Common + .Clang_x86 + .Clang_Retail
#endif

