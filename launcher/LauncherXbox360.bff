#once

{
	.ProjectName = 'LauncherXbox360'
	.ProjectPath = 'launcher'

	.ProjectConfigs = {}
	ForEach(.BuildConfig in .BuildConfigs)
	{
		Using(.BuildConfig)

		If (.PlatformName == 'Xbox360')
		{
			.ObjectDir = 'obj/$CompilerName$/$PlatformName$/$ArchName$/$ConfigName$'
			.OutputDir = 'out/$CompilerName$/$PlatformName$/$ArchName$/$ConfigName$'

			Unity('$ProjectName$-Unity-$CompilerName$-$PlatformName$-$ArchName$-$ConfigName$')
			{
				.UnityInputFiles =
				{
					'$ProjectPath$/main_xbox360.cpp',
				}
			
				.UnityOutputPath = '$ObjectDir$/$ProjectPath$/'
				.UnityOutputPattern = '$ProjectName$_Unity*.cpp'
			}

			ObjectList('$ProjectName$-Objs-$CompilerName$-$PlatformName$-$ArchName$-$ConfigName$')
			{
				.CompilerInputUnity = '$ProjectName$-Unity-$CompilerName$-$PlatformName$-$ArchName$-$ConfigName$'
				.CompilerOutputPath = '$ObjectDir$/$ProjectPath$/'
			}

			Executable('$ProjectName$-EXE-$CompilerName$-$PlatformName$-$ArchName$-$ConfigName$')
			{
				.Libraries = {'$ProjectName$-Objs-$CompilerName$-$PlatformName$-$ArchName$-$ConfigName$'}
				.LinkerOptions + ' libcMT.lib'
				// Must be linked as default.xex
				.LinkerOutput = '$OutputDir$/default$ExeExtension$'
			}

			// This is the main target
			Alias('$ProjectName$-$CompilerName$-$PlatformName$-$ArchName$-$ConfigName$')
			{
				.Targets = '$ProjectName$-Exe-$CompilerName$-$PlatformName$-$ArchName$-$ConfigName$'
			}
			^'Targets_$CompilerName$_$PlatformName$_$ArchName$_$ConfigName$' + {'$ProjectName$-$CompilerName$-$PlatformName$-$ArchName$-$ConfigName$'}

#if __WINDOWS__
			.ProjectConfig = 
			[
				Using(.'Project_$CompilerName$_$PlatformName$_$ArchName$_$ConfigName$')
				.Target = '$ProjectName$-$CompilerName$-$PlatformName$-$ArchName$-$ConfigName$'
			]
			^ProjectConfigs + .ProjectConfig
#endif
		}
	}

#if __WINDOWS__
	.Options = []
	CreateVcxProjectExe(.ProjectName, .ProjectPath, .ProjectConfigs, .Options)
#endif
}
